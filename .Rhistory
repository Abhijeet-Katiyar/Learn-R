vec1<-c(1,0,1,0,1,0,0,1,0)
factor(var1)
factor(vec1)
vec1<-c(1,0,1,0,1,0,0,1,0,5,8,7,9,3,1)
factor(vec1)
vec2<-list("NIkhil",100)
type(vec2)
typeof(vec2)
pbinom(5,100,0.5)
pbinom(5,1000,0.5)
pbinom(5,100000,0.5)
pbinom(5,10000,0.5)
pbinom(5,20000,0.5)
pbinom(5,200,0.5)
pbinom(5,2000,0.5)
dbinom(5,2000,0.5)
rbinom(5,2000,0.5)
install.packages("rattle")
# why to use rattle ?
# It stands for  "R analytical tool to learn easily" .
# It is a Data Miner tool
# web GUI based platform for data mining
library(rattle)
library(MASS)
data()
rattle(csvname=NULL,dataset=NULL,useGtkBuilder=TRUE)
rattle(csvname=NULL,dataset=NULL,useGtkBuilder=TRUE)
setwd("E:/R LAB")
setwd("E:/R LAB")
DF=read.csv(("data preprossing r/Data.csv"))
View(DF)
DF$Age=ifelse(is.na((DF$Age),
ave(DF$Age,FUN=function(x) mean(x,na.rm=TRUE)),
DF$Age))
DF$Age=ifelse(is.na(DF$Age),
ave(DF$Age,FUN=function(x) mean(x,na.rm=TRUE)),
DF$Age))
DF$Age=ifelse(is.na(DF$Age),
ave(DF$Age,FUN=function(x) mean(x,na.rm=TRUE)),
DF$Age)
DF$Salary=ifelse(is.na(DF$Salary),
ave(DF$Salary,FUN=function(x) mean(x,na.rm=TRUE)),
DF$Salary)
DF$Purchased=factor(DF$Purchased,
levels=c('No','Yes'),
labels=c(0,1))
# Encoding catagorical data
DF$Country=factor(DF$Country,
levels=c('France','Spain','Germany'),
labels = c(1,2,3))
library(catools)
installed.packages(catools)
install.packages("catools")
install.packages("catools")
install.packages("caTools")
install.packages("caTools")
set.seed(123)
library(catools)
set.seed(123)
library(caTools)
set.seed(123)
split = sample.split(DF$Purchased,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
training_set=subset(DF,split==TRUE)
testing_set=subset(DF,split==FALSE)
DF=read.csv(("data preprossing r/Salary_Data.csv"))
library(caTools)
set.seed(123)
split=sample.split(DF$Salary,SplitRatio = 2/3)
training_set=subset(DF,split==TRUE)
test_set=subset(DF,split==FALSE)
regressor = lm(formula=DF$salary~DF$YearsExperience,data=training_set)
regressor = lm(formula=DF$Salary~DF$YearsExperience,data=training_set)
regressor
summary(regressor)
# Predictions
y_pred=predict(regressor,newdata = test_set)
y_pred
ggplot()+
geom_point(aes(x=test_set$YearsExperience,y=test_set$Salary),
colour='red')+
geom_line(aes(x=training_set$YearsExperience,y=predict(regressor,newdata=training_set)),
colour='blue')+
ggtitle('Salary vs Experience')+
xlab('Years of experience')+
ylab('Salary')
library(ggplot2)
ggplot()+
geom_point(aes(x=test_set$YearsExperience,y=test_set$Salary),
colour='red')+
geom_line(aes(x=training_set$YearsExperience,y=predict(regressor,newdata=training_set)),
colour='blue')+
ggtitle('Salary vs Experience')+
xlab('Years of experience')+
ylab('Salary')
DF=read.csv(("data preprossing r/Salary_Data.csv"))
library(caTools)
set.seed(123)
split=sample.split(DF$Salary,SplitRatio = 2/3)
training_set=subset(DF,split==TRUE)
test_set=subset(DF,split==FALSE)
#fitting
regressor = lm(formula=DF$Salary~DF$YearsExperience,data=training_set)
regressor
summary(regressor)
# Predictions
y_pred=predict(regressor,newdata = test_set)
y_pred
library(ggplot2)
ggplot()+
geom_point(aes(x=test_set$YearsExperience,y=test_set$Salary),
colour='red')+
geom_line(aes(x=training_set$YearsExperience,y=predict(regressor,newdata=training_set)),
colour='blue')+
ggtitle('Salary vs Experience')+
xlab('Years of experience')+
ylab('Salary')
ggplot()+
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour='red')+
geom_line(aes(x=training_set$YearsExperience,y=predict(regressor,newdata=training_set)),
colour='blue')+
ggtitle('Salary vs Experience')+
xlab('Years of experience')+
ylab('Salary')
DF=read.csv(("data preprossing r/Salary_Data.csv"))
# There is no missing values and no categorical data
library(caTools)
set.seed(123)
split=sample.split(DF$Salary,SplitRatio = 2/3)
training_set=subset(DF,split==TRUE)
test_set=subset(DF,split==FALSE)
# for feture scaling scale is function to be used
# Linear regression
#fitting
regressor = lm(formula=Salary~YearsExperience,data=training_set)
regressor
summary(regressor)
# Predictions
y_pred=predict(regressor,newdata = test_set)
y_pred
library(ggplot2)
ggplot()+
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour='red')+
geom_line(aes(x=training_set$YearsExperience,y=predict(regressor,newdata=training_set)),
colour='blue')+
ggtitle('Salary vs Experience')+
xlab('Years of experience')+
ylab('Salary')
DF=read.csv(("data preprossing r/Salary_Data.csv"))
# There is no missing values and no categorical data
library(caTools)
set.seed(123)
split=sample.split(DF$Salary,SplitRatio = 2/3)
training_set=subset(DF,split==TRUE)
test_set=subset(DF,split==FALSE)
# for feture scaling scale is function to be used
# Linear regression
#fitting
regressor = lm(formula=Salary~YearsExperience,data=training_set)
regressor
summary(regressor)
# Predictions
y_pred=predict(regressor,newdata = test_set)
y_pred
library(ggplot2)
ggplot()+
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour='red')+
geom_line(aes(x=training_set$YearsExperience,y=predict(regressor,newdata=training_set)),
colour='blue')+
ggtitle('Salary vs Experience')+
xlab('Years of experience')+
ylab('Salary')
